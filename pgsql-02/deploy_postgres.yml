- name: Prepare
  hosts: all, !runner
  become: True
  gather_subset: min
    
  tasks:
    - name: initial
      include_role:
        name: initial

- name: install Postgres 13 on ubuntu18
  hosts: postgres
  become: True
  gather_facts: no

  tasks:
    - name: install postgres
      include_role:
        name: postgresql

    - name: Create root user in postgres
      become_user: postgres
      postgresql_user:
        name: root
        password: 12345
        role_attr_flags: SUPERUSER
      tags:
        - postgresuser

    - name: Create rebrain_admin user in postgres
      become_user: postgres
      postgresql_user:
        name: rebrain_admin
        password: 12345
        # role_attr_flags: SUPERUSER
      tags:
        - postgresuser

    - name: Grant access user pgsqlubuntu18  #psql -U root postgres -h 127.0.0.1
      postgresql_pg_hba:
        dest: /etc/postgresql/13/main/pg_hba.conf
        contype: host
        users: root
        source: 127.0.0.1
        databases: all
        method: md5
        create: true
      notify: Reload PostgreSQL
      tags:
        - postgresuser

    - name: Reload PostgreSQL
      service: 
        name: postgresql
        state: reloaded

    - name: Drop rebrain_courses_db
      become_user: postgres
      community.postgresql.postgresql_db:
        name: rebrain_courses_db
        state: absent

    - name: Create database rebrain_courses_db 
      become_user: postgres
      postgresql_db:
        name: rebrain_courses_db

    - name: GRANT ALL PRIVILEGES ON DATABASE rebrain_courses_db TO rebrain_admin
      become_user: postgres
      community.postgresql.postgresql_privs:
        db: rebrain_courses_db
        privs: ALL
        type: database
        role: rebrain_admin

    - name: copy script files
      copy:
        dest: /opt
        src:  "{{ item }}"
      loop:
        - users.sql
        - courses.sql
        - users_courses.sql
        - insert.sql
        
    - name: Run queries from SQL script
      postgresql_query:
        login_host: localhost
        login_user: rebrain_admin
        login_password: 12345
        db: rebrain_courses_db
        path_to_script: "{{ item }}"
      loop:
        - /opt/users.sql
        - /opt/courses.sql
        - /opt/users_courses.sql
        - /opt/insert.sql
      
    - name: Add new user
      postgresql_query:
        login_host: localhost
        login_user: rebrain_admin
        login_password: 12345
        db: rebrain_courses_db
        query: |
          INSERT INTO users(user_id,username,email,mobile_phone,firstname,lastname,city,is_curator,record_date) 
          VALUES ('12','vladon','Vladislav.Pirushin@gmail.com','+79817937545','Vladislav','Pirushin',NULL,'false',CURRENT_TIMESTAMP)
          ON CONFLICT DO NOTHING      
    
    - name: Add new course
      postgresql_query:
        login_host: localhost
        login_user: rebrain_admin
        login_password: 12345
        db: rebrain_courses_db
        query: |
          INSERT INTO courses(course_id,coursename,tasks_count,price)
          VALUES ('9','Postgresql','14','7900')
          ON CONFLICT DO NOTHING

    - name: Add new user-course link
      postgresql_query:
        login_host: localhost
        login_user: rebrain_admin
        login_password: 12345
        db: rebrain_courses_db
        query: |
          INSERT INTO users__courses(id,user_id,course_id)
          VALUES ('11','3','6')
          ON CONFLICT DO NOTHING

    - name: create directory
      file:
        path: /tmp/answers
        state: directory
        mode: '0777'
        
    - name: Copy data from courses
      # become_user: postgres
      postgresql_copy:
        login_host: localhost
        login_user: root
        login_password: 12345
        db: rebrain_courses_db
        src: 'SELECT * FROM courses'
        copy_to: /tmp/answers/table2_courses_data
        options:
          format: csv
          header: true

    - name: Copy data from users
      postgresql_copy:
        login_host: localhost
        login_user: root
        login_password: 12345
        db: rebrain_courses_db
        src: 'SELECT username, mobile_phone FROM users'
        copy_to: /tmp/answers/table1_usernames_and_phones
        options:
          format: csv
          header: true

    - name: Delete data for user yodajedi
      postgresql_query:
        login_host: localhost
        login_user: rebrain_admin
        login_password: 12345
        db: rebrain_courses_db
        query: |
          DELETE FROM users WHERE username='yodajedi'

    - name: Update price for Postgres course
      postgresql_query:
        login_host: localhost
        login_user: rebrain_admin
        login_password: 12345
        db: rebrain_courses_db
        query: |
          UPDATE courses SET price=10000 WHERE coursename='Postgresql'

    - name: Update user data
      postgresql_query:
        login_host: localhost
        login_user: rebrain_admin
        login_password: 12345
        db: rebrain_courses_db
        query: |
          UPDATE users SET is_curator='true' WHERE lastname='Pirushin'

    
    - name: DUMP left outer join
      postgresql_copy:
        login_host: localhost
        login_user: root
        login_password: 12345
        db: rebrain_courses_db
        src: 'select * from courses c left join users__courses uc on c.course_id=uc.course_id'
        copy_to: /tmp/answers/LEFT_OUTER_JOIN
        options:
          format: csv
          header: true

    - name: DUMP right outer join
      postgresql_copy:
        login_host: localhost
        login_user: root
        login_password: 12345
        db: rebrain_courses_db
        src: 'select * from users u right join users__courses uc on u.user_id=uc.user_id'
        copy_to: /tmp/answers/RIGHT_OUTER_JOIN
        options:
          format: csv
          header: true
        

    - name: dump database
      become_user: postgres
      community.postgresql.postgresql_db:
        login_host: localhost
        login_user: root
        login_password: 12345
        name: rebrain_courses_db
        state: dump
        target: /tmp/rebrain_courses_db.sql.bqp

    - name: save dump
      ansible.builtin.fetch:
        src: /tmp/rebrain_courses_db.sql.bqp
        dest: files
